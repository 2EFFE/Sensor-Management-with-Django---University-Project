# Generated by Django 5.1.4 on 2024-12-12 18:45

from django.db import migrations, models
from django.conf import settings

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sensori',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, db_column='Tipo', max_length=45, null=True)),
                ('descrizione', models.CharField(blank=True, db_column='Descrizione', max_length=255, null=True)),
                ('accuratezza', models.FloatField(blank=True, db_column='Accuratezza', null=True)),
                ('precisione', models.FloatField(blank=True, db_column='Precisione', null=True)),
                ('temperaturamin', models.FloatField(blank=True, db_column='TemperaturaMin', null=True)),
                ('temperaturamax', models.FloatField(blank=True, db_column='TemperaturaMax', null=True)),
                ('tolleranza', models.FloatField(blank=True, db_column='Tolleranza', null=True)),
                ('tensioneesercizio', models.FloatField(blank=True, db_column='TensioneEsercizio', null=True)),
                ('sensibilita', models.FloatField(blank=True, db_column='Sensibilita', null=True)),
            ],
            options={
                'db_table': 'Sensori',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='Letture',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('valore', models.FloatField(blank=True, db_column='Valore', null=True)),
                ('unita', models.CharField(blank=True, db_column='Unita', max_length=10, null=True)),
                ('datarilevazione', models.DateTimeField(auto_now_add=True, db_column='DataRilevazione')),
                ('sensoriid', models.ForeignKey('Sensori', db_column='SensoriID', on_delete=models.CASCADE, null=False)),
            ],
            options={
                'db_table': 'Letture',
                'managed': settings.IS_TESTING,
            },
        ),
    ]
